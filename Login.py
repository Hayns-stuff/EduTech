# Form implementation generated from reading ui file 'C:\Users\Hzy\PycharmProjects\SHS_Enrollment_System\Coverted_UI_to_PY\AdminUI.ui'
#
# Created by: PyQt6 UI generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox

# open dashboard on staff login
try:
    from Dashboard import show_dashboard
except Exception:
    show_dashboard = None


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(822, 538)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 821, 171))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("C:\\Users\\Hzy\\PycharmProjects\\SHS_Enrollment_System\\Coverted_UI_to_PY\\../EduTechSchool.jpg"))
        self.label.setObjectName("label")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 140, 831, 501))
        self.tabWidget.setStyleSheet("background-color: rgb(255, 176, 144);")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label_2 = QtWidgets.QLabel(parent=self.tab)
        self.label_2.setGeometry(QtCore.QRect(370, 20, 151, 61))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.tab)
        self.label_3.setGeometry(QtCore.QRect(200, 100, 111, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.tab)
        self.label_4.setGeometry(QtCore.QRect(200, 170, 111, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.inputUsername = QtWidgets.QLineEdit(parent=self.tab)
        self.inputUsername.setGeometry(QtCore.QRect(310, 90, 271, 41))
        self.inputUsername.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.inputUsername.setObjectName("inputUsername")
        self.inputPassword = QtWidgets.QLineEdit(parent=self.tab)
        self.inputPassword.setGeometry(QtCore.QRect(310, 160, 271, 41))
        self.inputPassword.setStyleSheet("background-color: rgb(255, 255, 255);r")
        self.inputPassword.setObjectName("inputPassword")
        self.pushButton = QtWidgets.QPushButton(parent=self.tab)
        self.pushButton.setGeometry(QtCore.QRect(340, 230, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.tabWidget.addTab(self.tab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menu11_AddStudent = QtGui.QAction(parent=MainWindow)
        self.menu11_AddStudent.setObjectName("menu11_AddStudent")
        self.menu12_EditDeleteStudents = QtGui.QAction(parent=MainWindow)
        self.menu12_EditDeleteStudents.setObjectName("menu12_EditDeleteStudents")
        self.menu21_AddDelMarks = QtGui.QAction(parent=MainWindow)
        self.menu21_AddDelMarks.setObjectName("menu21_AddDelMarks")
        self.menu31_AddDelAttendance = QtGui.QAction(parent=MainWindow)
        self.menu31_AddDelAttendance.setObjectName("menu31_AddDelAttendance")
        self.menu41_AddEditDelFees = QtGui.QAction(parent=MainWindow)
        self.menu41_AddEditDelFees.setObjectName("menu41_AddEditDelFees")
        self.menu51_StudentReport = QtGui.QAction(parent=MainWindow)
        self.menu51_StudentReport.setObjectName("menu51_StudentReport")
        self.menu52Marks_Report = QtGui.QAction(parent=MainWindow)
        self.menu52Marks_Report.setObjectName("menu52Marks_Report")
        self.menu53Attendance_Report = QtGui.QAction(parent=MainWindow)
        self.menu53Attendance_Report.setObjectName("menu53Attendance_Report")
        self.menu54Fees_Report = QtGui.QAction(parent=MainWindow)
        self.menu54Fees_Report.setObjectName("menu54Fees_Report")
        self.menu61Logout = QtGui.QAction(parent=MainWindow)
        self.menu61Logout.setObjectName("menu61Logout")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Welcome!"))
        self.label_3.setText(_translate("MainWindow", "User Name"))
        self.label_4.setText(_translate("MainWindow", "Password"))
        self.pushButton.setText(_translate("MainWindow", "Login"))
        self.menu11_AddStudent.setText(_translate("MainWindow", "Add New Student"))
        self.menu12_EditDeleteStudents.setText(_translate("MainWindow", "Edit or Delete Student"))
        self.menu21_AddDelMarks.setText(_translate("MainWindow", "Add / Edit or Delete Marks"))
        self.menu31_AddDelAttendance.setText(_translate("MainWindow", "Add Edit / Delete Attendance Details"))
        self.menu41_AddEditDelFees.setText(_translate("MainWindow", "Add / Edit / Delete Fees"))
        self.menu51_StudentReport.setText(_translate("MainWindow", "Student Reports"))
        self.menu52Marks_Report.setText(_translate("MainWindow", "Marks Report"))
        self.menu53Attendance_Report.setText(_translate("MainWindow", "Attendance Report"))
        self.menu54Fees_Report.setText(_translate("MainWindow", "Fees Reports"))
        self.menu61Logout.setText(_translate("MainWindow", "Logout"))


class LoginWindow(QtWidgets.QMainWindow):
    """Wrapper window that handles authentication logic."""
    def __init__(self):
        super().__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.ui.retranslateUi(self)

        # set password echo
        try:
            self.ui.inputPassword.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        except Exception:
            pass

        # simple hard-coded accounts: username -> (password, role)
        self._accounts = {
            "staff": ("staffpass", "staff"),
            "admin": ("adminpass", "admin"),
        }

        # keep a reference to dashboard window so it's not GC'd
        self.dashboard_window = None

        # connect button
        try:
            self.ui.pushButton.clicked.disconnect()
        except Exception:
            pass
        self.ui.pushButton.clicked.connect(self._on_login)

    def _on_login(self):
        username = self.ui.inputUsername.text().strip()
        password = self.ui.inputPassword.text()
        acct = self._accounts.get(username)
        if not acct or acct[0] != password:
            QMessageBox.warning(self, "Login failed", "Invalid username or password")
            return

        role = acct[1]
        if role == "staff":
            if show_dashboard is None:
                QMessageBox.critical(self, "Error", "Dashboard module not available")
                return
            # open dashboard and keep reference
            self.dashboard_window = show_dashboard()
        else:
            # admin flow not yet implemented
            QMessageBox.information(self, "Admin", "Admin interface not yet implemented")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
